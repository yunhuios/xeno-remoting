<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.since10</groupId>
	<artifactId>xeno-remoting</artifactId>
	<version>2.1.0-SNAPSHOT</version>

	<organization>
		<name>SINCE10.COM</name>
	</organization>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<dependency.junit.verion>4.12</dependency.junit.verion>
		<dependency.httpunit.verion>1.7</dependency.httpunit.verion>
		<dependency.tomcat.version>7.0.62</dependency.tomcat.version>
		<dependency.commons-logging.version>1.2</dependency.commons-logging.version>
		<dependency.yuicompressor.version>2.4.7</dependency.yuicompressor.version>
		<dependency.jackson.version>2.5.0</dependency.jackson.version>
		<plugin.jasmine.version>1.3.1.6</plugin.jasmine.version>
		<plugin.saga.version>1.5.4</plugin.saga.version>
		<plugin.jsdoctk.version>2.3.2</plugin.jsdoctk.version>
		<plugin.cobertura.version>2.7</plugin.cobertura.version>
		<plugin.maven-jar.version>2.6</plugin.maven-jar.version>
		<plugin.maven-source.version>2.4</plugin.maven-source.version>
		<plugin.maven-javadoc.version>2.10.3</plugin.maven-javadoc.version>
		<plugin.maven-dependency.version>2.10</plugin.maven-dependency.version>
		<plugin.maven-antrun.version>1.8</plugin.maven-antrun.version>
	</properties>

	<pluginRepositories>
		<pluginRepository>
			<id>jsdoctk</id>
			<url>http://jsdoctk-plugin.googlecode.com/svn/repo</url>
		</pluginRepository>
	</pluginRepositories>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${dependency.junit.verion}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>httpunit</groupId>
			<artifactId>httpunit</artifactId>
			<version>${dependency.httpunit.verion}</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>javax.servlet</groupId>
					<artifactId>servlet-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>tomcat-jsp-api</artifactId>
			<version>${dependency.tomcat.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>${dependency.commons-logging.version}</version>
		</dependency>
		<dependency>
			<groupId>com.yahoo.platform.yui</groupId>
			<artifactId>yuicompressor</artifactId>
			<version>${dependency.yuicompressor.version}</version>
			<exclusions>
				<exclusion>
					<groupId>rhino</groupId>
					<artifactId>js</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${dependency.jackson.version}</version>
		</dependency>
	</dependencies>

	<build>
		<resources>
			<resource>
				<directory>src/main/javascript</directory>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>com.github.searls</groupId>
				<artifactId>jasmine-maven-plugin</artifactId>
				<version>${plugin.jasmine.version}</version>
				<configuration>
					<jsTestSrcDir>${basedir}/src/test/javascript</jsTestSrcDir>
					<keepServerAlive>true</keepServerAlive>
				</configuration>
				<executions>
					<execution>
						<phase>test</phase>
						<goals>
							<goal>test</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.github.timurstrekalov</groupId>
				<artifactId>saga-maven-plugin</artifactId>
				<version>${plugin.saga.version}</version>
				<configuration>
					<baseDir>http://localhost:${jasmine.serverPort}</baseDir>
					<outputDir>${basedir}/../build/test-result</outputDir>
					<noInstrumentPatterns>
						<pattern>.*/spec/.*</pattern>
					</noInstrumentPatterns>
				</configuration>
				<executions>
					<execution>
						<phase>test</phase>
						<goals>
							<goal>coverage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>${plugin.cobertura.version}</version>
				<configuration>
					<formats>
						<format>html</format>
					</formats>
					<outputDirectory>${basedir}/../build/test-result</outputDirectory>
				</configuration>
				<executions>
					<execution>
						<phase>test</phase>
						<goals>
							<goal>cobertura</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>${plugin.maven-jar.version}</version>
				<configuration>
					<archive>
						<addMavenDescriptor>false</addMavenDescriptor>
						<manifestEntries>
							<Built-By>${project.organization.name}</Built-By>
							<Release-Version>${project.version}</Release-Version>
						</manifestEntries>
					</archive>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>${plugin.maven-source.version}</version>
				<configuration>
					<archive>
						<addMavenDescriptor>false</addMavenDescriptor>
						<manifestEntries>
							<Built-By>${project.organization.name}</Built-By>
							<Release-Version>${project.version}</Release-Version>
						</manifestEntries>
					</archive>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>nl.windgazer</groupId>
				<artifactId>jsdoctk-plugin</artifactId>
				<version>${plugin.jsdoctk.version}</version>
				<configuration>
					<srcDir>${basedir}/src/main/javascript</srcDir>
					<directory>${project.build.directory}/jsdoc</directory>
					<recurse>10</recurse>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>jsdoc</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${plugin.maven-javadoc.version}</version>
				<configuration>
					<locale>en_US</locale>
					<archive>
						<addMavenDescriptor>false</addMavenDescriptor>
						<manifestEntries>
							<Built-By>${project.organization.name}</Built-By>
							<Release-Version>${project.version}</Release-Version>
						</manifestEntries>
					</archive>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>${plugin.maven-dependency.version}</version>
				<executions>
					<execution>
						<id>only-essentials</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/required</outputDirectory>
							<includeScope>runtime</includeScope>
							<excludeTransitive>true</excludeTransitive>
						</configuration>
					</execution>
					<execution>
						<id>full-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/libraries</outputDirectory>
							<includeScope>runtime</includeScope>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>${plugin.maven-antrun.version}</version>
				<configuration>
					<target>
						<mkdir dir="${project.build.directory}/${project.artifactId}-${project.version}" />
						<copy todir="${project.build.directory}/${project.artifactId}-${project.version}/javadoc" encoding="UTF-8" outputencoding="UTF-8">
							<fileset dir="${project.build.directory}/apidocs" />
						</copy>
						<copy todir="${project.build.directory}/${project.artifactId}-${project.version}/jsdoc" encoding="UTF-8" outputencoding="UTF-8">
							<fileset dir="${project.build.directory}/jsdoc" />
						</copy>
						<copy todir="${project.build.directory}/${project.artifactId}-${project.version}/required" encoding="UTF-8" outputencoding="UTF-8">
							<fileset dir="${project.build.directory}/required" />
						</copy>
						<copy todir="${project.build.directory}/${project.artifactId}-${project.version}/libraries" encoding="UTF-8" outputencoding="UTF-8">
							<fileset dir="${project.build.directory}/libraries" />
						</copy>
						<copy file="${project.build.directory}/${project.artifactId}-${project.version}.jar" tofile="${project.build.directory}/${project.artifactId}-${project.version}/${project.artifactId}-${project.version}.jar" encoding="UTF-8" outputencoding="UTF-8" />
						<copy file="${project.build.directory}/${project.artifactId}-${project.version}-sources.jar" tofile="${project.build.directory}/${project.artifactId}-${project.version}/${project.artifactId}-${project.version}-sources.jar" encoding="UTF-8" outputencoding="UTF-8" />
						<copy todir="${project.build.directory}/${project.artifactId}-${project.version}" encoding="UTF-8" outputencoding="UTF-8">
							<fileset dir="${basedir}/src/main/doc" />
						</copy>
						<zip basedir="${project.build.directory}/${project.artifactId}-${project.version}" destfile="${basedir}/../build/${project.artifactId}-${project.version}.zip" encoding="UTF-8" />
					</target>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
