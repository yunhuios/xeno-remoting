<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	version="3.0">

	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>/WEB-INF/log4j.properties</param-value>
	</context-param>
	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/spring.xml</param-value>
	</context-param>
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<servlet>
		<servlet-name>DispatcherServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/mvc.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>DispatcherServlet</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>DispatcherServlet</servlet-name>
		<url-pattern>*.do</url-pattern>
	</servlet-mapping>

	<servlet>
		<servlet-name>MessageServlet</servlet-name>
		<servlet-class>xeno.remoting.web.MessageServlet</servlet-class>
		<async-supported>true</async-supported>
		<load-on-startup>2</load-on-startup>
		<!--
			A parameter to determine the way of characters encoding.
			This parameter is optional, if not provides, the default value is: "UTF-8".
		-->
		<init-param>
			<param-name>characterEncoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<!--
			A parameter to determine whether this Servlet will take "json2.js" as an implementation or not.
			If the value of this parameter sets to "true" (case insensitive), the content of "json2.js" will be exported.
			For some modern browsers (e.g. IE8+, Firefox, Chrome, etc.), JSON has already be implemented and embed in the browser.
			So if you ensure that end users are using such kind of browsers, there is no need to open this setting.
			This parameter is optional, if not provides, the default value is: "false".
		-->
		<init-param>
			<param-name>includeJsonLibrary</param-name>
			<param-value>true</param-value>
		</init-param>
		<!--
			A parameter to determine whether this Servlet will scan global dependencies directory (e.g. for Apache Tomcat, <Installation Root>\lib) to find remote proxy classes.
			In most cases, you will not allow to put dependencies to that directory, so there is no need to take time to scan it.
			This parameter is optional, if not provides, the default value is: "false".
		-->
		<init-param>
			<param-name>scanGlobalDependencies</param-name>
			<param-value>true</param-value>
		</init-param>
		<!--
			A parameter to determine whether this Servlet will be startup in a debug mode or not.
			If the value of this parameter sets to "true" (case insensitive), all JavaScripts generated by this Servlet will in a readable format.
			And you could use "<contextPath>/xr/index.htm" to see all available remote proxies.
			Otherwise, all JavaScripts generated by this Servlet will be minified to reduce the size.
			This parameter is optional, if not provides, the default value is: "false".
		-->
		<init-param>
			<param-name>debugMode</param-name>
			<param-value>true</param-value>
		</init-param>
		<!--
			A parameter to determine the maximum continuous error retry count when the reverse AJAX thread failed.
			If this value provides, the reverse AJAX thread will be stopped after specific continuous error retry count occurs to reduce the network traffic.
			0 or less than 0 means unlimited retry count.
			This parameter is optional, if not provides, the default value is: 0.
		-->
		<init-param>
			<param-name>reverseAjaxMaxRetryCount</param-name>
			<param-value>3</param-value>
		</init-param>
		<!--
			A parameter to determine the time (in millisecond) of idle reverse AJAX thread live.
			If this value provides, each reverse AJAX thread will be aborted and setup a new request thread when there is no server side response occurs during this time period.
			0 or less than 0 means unlimited idle live time.
			It is recommended this value should be set less than the session timeout to prevent the reverse AJAX to be inactivated automatically.
			This parameter is optional, if not provides, the default value is: 0.
		-->
		<init-param>
			<param-name>reverseAjaxIdleLiveTime</param-name>
			<param-value>120000</param-value>
		</init-param>
	</servlet>
	<!--
		For the remote Servlet to handle requests from client side, the node value of "url-pattern" should always be: "/xr/*".
	-->
	<servlet-mapping>
		<servlet-name>MessageServlet</servlet-name>
		<url-pattern>/xr/*</url-pattern>
	</servlet-mapping>

</web-app>
